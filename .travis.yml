dist: bionic
language: go
os: linux

services:
  - docker

go:
  - 1.15.x
  - 1.14.x
  - tip

jobs:
  allow_failures:
    - go: tip

env:
  global:
    # REVIEWDOG_GITHUB_API_TOKEN
    - secure: e3XaA+pzOc4QdW1L9pu8xKYK1UnmzaAkoTr9KYPvSZMatNe61bynBt0wM2aqutCI4Ow83Z02cQeW4/CoZuQtbFjufkuTYKd/2pwlZ7DQCeKyafVtpwHI2A1dJBR2pxqywYn62NTxNYw1xGFqBcNr5T7FKRSoaE3GBK9H7krriXLj+5t6bU9632amoE5dx6SyJ2C1t+QxzNi8m6TaGXiAwAmDo6Y/AcocCnzFiIBcXutZIjBO5TtkEncgIDpoRiOF7kPTx2IkYXnB1wNDJM08CO0OQd3giKPzNCYjL9feCUM7lykxbx3oXEaZ6V/3JxxZhxt1WWbB53ch6tgfbEm7+Oxc37ForPLkV7sb4HS/1kxmrLbZi0IB/rIDDUn03+2rWDAF9+mnoM/r1Qdgp2GpMNYzxKqryiFhaKtoQt0erBcq5P+U6qW/Dd0eR1/rSfqv/0ixUtr2npRyiFUn3gm1ffDLeGis8H3SMNTSswhJ6AdnABWEiZ6OcmkJY46MbFMqn3osbhhgjyxsqluBpQV4Q+n1unsK4SNbvLwwIScOI5NvmInwJdBpPfyoRtEOPFmEl3vVbLpD+XjhKYUHiPoU/1cIWYrFOlRnVbq70W4ZX82OpzrXusOe8nVpVTfD7iVqyALGyTo4B2uR3P0PWrRaVx4C6eRcugyx9jxn+zHw0rE=

branches:
  except:
    - /^PMM\-\d{4}/

go_import_path: github.com/percona/qan-api2

cache:
  directories:
    - /home/travis/.cache/go-build
    # - /home/travis/gopath/pkg

before_cache:
  - go clean -testcache
  # - go clean -cache

install:
  # ensure that vendor/ is in sync with code and Gopkg.toml/lock
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - dep check
  # install reviewdog and golangci-lin
  - curl https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s

before_script:
  # ensure that generated files are not changed
  - make init
  - make gen
  - make format
  - git status
  - git diff --exit-code

script:
  # static analyze
  - make ci-reviewdog

  - make install
  - make test-env-up
  - make test-race
  - make test-cover

  - make check

after_success:
  - bash <(curl -s https://codecov.io/bash) -X fix

notifications:
  # perconacorp:token#channel
  slack:
    on_success: change
    on_failure: always
    rooms:
      - secure: "r7sZ36OZ78IK8Fp3B4FeX4ix5gvSkspg7P5HCgNgWmmbu2ZNEfrbCOnE72WwG4JnSFAHFLfA2Dq0NPD566taMsAhoMcoHjQpt4Nr0jg5rrJFAgDkNcCZG1jimScXWBAB7skDQckURT+UmzH1lTy1Q3yVotz3GNO/duRsaISIFrB61AA9ZrHRWvmymgpRJ7WLihDpTnVKtCAhFdykcq5b4FR3nyuLWwsTbFbfN//jDen1IONySBdljJWZQtVCXgX50PQrgWyAT2y02IJSNblHY2f+dZ10bSKSjnxT3FOVeRrwXfTv2X6gON9TuVK4zu10NV084cT5pirKYsS06tEOvxrU+DWrxEIvekMsJvChKlFP5g9oM8vUvpyC/T1SAfGBDH7mWhJLjlPUofkkdQTL0JBAhceGNE+PCUXad/TmfdbFzax1+cuQf8h+zuRrwMWFXOKuScTJxb4P2JaBx49L2MgpHh4nXPkYXizYHDP78wxHkxVMfXqadPdgCwD3hF4Kct8gsXbwrJF56IlPTfUxGF95cLlIf+2it2KBWDZY+rO1f+JOXyfDIOsWCeTq0CZetAJuwLniWS1lrKHlAzmCazil7NKP2tTLkRV49MGsK1SfqGgp2NC5O7oxEGgL4IGF509WCd+gNbHqZchJHXKwor5G5T8g4t1lXV5Q5Ga7jAY="
