dist: bionic
language: go

services:
  - docker

go:
  - 1.14.x
  - tip

matrix:
  allow_failures:
    - go: tip

env:
  global:
    secure: "o1dj6eNebK5Nf8xk9Dxi5d9+t50HlQrbHCKocjHJueCBsVTCV1pVCQYBtgW5hkgWAb/ZJwQl8TZtH5SHomMLMAJqZx/k8hubYaBsAKBNWTAlj4J/wWivIMPSKEsl59ldspoWhTqI5JUXoSCgy8etMq5adaR0zBLxoLDnhc5kcWte//brdzaZCmzpCIN6zHxIKrsxvKmXb6gy1uZcVkSThnDEKNXVfet86XPx7wZNuHBca3eB0z1Z+SFj+U0iZqNN0jdUmIWzsy8VwI8AWK0MKgarKjyvqetK3sO2RN3tSbPsVGceIDXTfU9ktCqrSlpPBn6S5N6bMtFbdNZeHZntXvtPNvqB9FGH0s69u2K8MHNg2031arVNwYr+AWEfv4DB7nQbo4fCtvnQ4fhVXdkK+I+bJjNUcVctZt+4ejH07+nqjZAYub1ZYY8Lj27OTEmRrHGVA/NeknSrGYXqGXifBfh9AqnKIZh3zrA8+p6d//uNL4zdqGfgQvMlL54qyTvvR7TbWFW/MkFOTKQ0u9+CodMQ7Sg2IkmaLM4R6kTX904uPq8mGebpHK8FWMHy8tommOIzBPcPTISv7HWPdmUE8vzybL98sijkfWd4CoWNg3Lr/UO16Q4LyD9srpUODBJfWl8OHcD9j0zXejVhJdOaj7Euekk5/kdz7p6e7ck/PXk="

branches:
  except:
    - /^PMM\-\d{4}/

go_import_path: github.com/percona/qan-api2

cache:
  directories:
    - /home/travis/.cache/go-build
    # - /home/travis/gopath/pkg

before_cache:
  - go clean -testcache
  # - go clean -cache

install:
  # ensure that vendor/ is in sync with code and Gopkg.toml/lock
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - dep check
  # install reviewdog and golangci-lin
  - curl https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s

before_script:
  # ensure that generated files are not changed
  - make init
  - make gen
  - make format
  - git status
  - git diff --exit-code

script:
  # static analyze
  - make ci-reviewdog

  - make install
  - make test-env-up
  - make test-race
  - make test-cover

  - make check

after_success:
  - bash <(curl -s https://codecov.io/bash) -X fix

notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      # REVIEWDOG_GITHUB_API_TOKEN
      secure: "Md83AEZnxZ/pXNEM4jrFO8vLVbWKW3SOzWqOCFFhsH/ojisQUF5SjMgH2ysZ/2J6AOps0w5+ny1ZAt0/Y2l64gX/5/qwbHERj/+f3kTKVXkGxOBYWCOdxdNlqYD90UJRG9HKqtcjNztd/JzoK+AZuE9rD9dKHOmmzLz/n6DsQEpu/jeDcn+rIrlRm7RrrKqNjbACnKEfMVL3WoSlOiKz6nrCq6Iyb9a3N1/UctaxSDR3nxZJ25E61C7tytFZkCx7uP1ep3Iok6uEdgpkPRmKUZUUOl1HR2O7dvi4HoNxWYut1xluhZ8Zbny/qOVJfBDnR5JRzgefzwKNTVUm97/NCKgaQcQXbNGieymErbi5bVnpFhcFxnqvrcpeT0drTw/ZTjD6bxpNnQLDXZeGUyEvLyEaNFreAI9LwADvzhpvi/xu1JoeLVGP4BfOlRj/v21PElS5kbK5FcPcEeTSqhJroOBe48p8dhlLI35U1/Y9KOBKS1Vlb117wpXlfFwMOhAKlXDdaUUGrQXwFb1nTAuo5WkPPgto0HBBK+mEtOUJLtEUZCfu4Zf1uH8PNzXSn6fhpSv36+Sklv+9obkqeJUCeEuoEJObhWrsVhGw/DcgzsRBmOtL+BcIpFDqYMKYrCAaOm+u2FIHGoCDE7ym2Xe+fw/K/XmSj/HsGcWNKkGZRso="
