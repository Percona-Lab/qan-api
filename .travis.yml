dist: bionic
language: go
os: linux

services:
  - docker

go:
  - 1.15.x
  - 1.14.x
  - tip

jobs:
  allow_failures:
    - go: tip

env:
  global:
    # REVIEWDOG_GITHUB_API_TOKEN
    - secure: "mOdJwd4UJ+bY+X/3w+Je1OJCqGT3TRcdQ3zKTWHYH0yZaebZ6sNewdAuWSNtaWhioVkgDj5txFqW/6yzQ7q6RJZ0qwObCT7EwYqT64uPMnjHXwM/D8qVAMs9C/wNsT+8LTKnoddcgJ08JnfarFNWLNP56azDxaDFmB7yOFwrWzO7L+nVKxQS5MmUH1YAFcZele4jiT3ifrXxmeMWS86oyK0ku48u5jFYAbu9pXKvR8YsLaT6k6mZgZHxY8j8lhMiCpVJZG4E2MKY2vBxJEa/lBgYoRJUftDNlHOnMFp0sGQTJVv8tU8000XKhDi4kAM32Bjw9f6TJfcDUmxK+CWR3eS0UQItBRje51RGA76DXJ7bn93Zn/L8dEjYFo1MFrXj6GNhWAVPzWGxgpgYcievvXdHp66sJrRSHnXgD5AYRw22Lor9K3lWcqIqUqZ4uG0xFueXSC2diEvA+9YeGyi7Px+Bt+QbUCnlJRfIt1UXAd2U557JnrGeRtcSVO4euiOYgSbGgJYUqlM8X1uxMLw22CQHESYW3WGrUem0hvB5bMh1bzzzVJPGjlSX/4nr8PHg+dO02D8nAlM3GELzJ2K/UwzA+F+2e4g5sd2nLnZYJoLttyudU1LiQPqT2XU9QiaX/SphHgzP5nJESQFAnKq+3DSIi/YCZg2gtu4sHv6bN/w="

branches:
  except:
    - /^PMM\-\d{4}/

go_import_path: github.com/percona/qan-api2

cache:
  directories:
    - /home/travis/.cache/go-build
    # - /home/travis/gopath/pkg

before_cache:
  - go clean -testcache
  # - go clean -cache

install:
  # ensure that vendor/ is in sync with code and Gopkg.toml/lock
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - dep check
  # install reviewdog and golangci-lin
  - curl https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s

before_script:
  # ensure that generated files are not changed
  - make init
  - make gen
  - make format
  - git status
  - git diff --exit-code

script:
  # static analyze
  - make ci-reviewdog

  - make install
  - make test-env-up
  - make test-race
  - make test-cover

  - make check

after_success:
  - bash <(curl -s https://codecov.io/bash) -X fix

notifications:
  # perconacorp:token#channel
  slack:
    on_success: change
    on_failure: always
    rooms:
      - secure: "r7sZ36OZ78IK8Fp3B4FeX4ix5gvSkspg7P5HCgNgWmmbu2ZNEfrbCOnE72WwG4JnSFAHFLfA2Dq0NPD566taMsAhoMcoHjQpt4Nr0jg5rrJFAgDkNcCZG1jimScXWBAB7skDQckURT+UmzH1lTy1Q3yVotz3GNO/duRsaISIFrB61AA9ZrHRWvmymgpRJ7WLihDpTnVKtCAhFdykcq5b4FR3nyuLWwsTbFbfN//jDen1IONySBdljJWZQtVCXgX50PQrgWyAT2y02IJSNblHY2f+dZ10bSKSjnxT3FOVeRrwXfTv2X6gON9TuVK4zu10NV084cT5pirKYsS06tEOvxrU+DWrxEIvekMsJvChKlFP5g9oM8vUvpyC/T1SAfGBDH7mWhJLjlPUofkkdQTL0JBAhceGNE+PCUXad/TmfdbFzax1+cuQf8h+zuRrwMWFXOKuScTJxb4P2JaBx49L2MgpHh4nXPkYXizYHDP78wxHkxVMfXqadPdgCwD3hF4Kct8gsXbwrJF56IlPTfUxGF95cLlIf+2it2KBWDZY+rO1f+JOXyfDIOsWCeTq0CZetAJuwLniWS1lrKHlAzmCazil7NKP2tTLkRV49MGsK1SfqGgp2NC5O7oxEGgL4IGF509WCd+gNbHqZchJHXKwor5G5T8g4t1lXV5Q5Ga7jAY="
